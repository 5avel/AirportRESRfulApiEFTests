// <auto-generated />
using System;
using AirportRESRfulApi.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AirportRESRfulApi.DAL.Migrations
{
    [DbContext(typeof(AirportContext))]
    partial class AirportContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AirportRESRfulApi.DAL.Models.Crew", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DepartureId");

                    b.HasKey("Id");

                    b.HasIndex("DepartureId")
                        .IsUnique();

                    b.ToTable("Crews");

                    b.HasData(
                        new { Id = 1, DepartureId = 1 },
                        new { Id = 2, DepartureId = 2 },
                        new { Id = 3, DepartureId = 3 }
                    );
                });

            modelBuilder.Entity("AirportRESRfulApi.DAL.Models.Departure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DepartureTime");

                    b.Property<int>("FlightId");

                    b.Property<string>("FlightNumber")
                        .IsRequired()
                        .HasMaxLength(8);

                    b.HasKey("Id");

                    b.HasIndex("FlightId")
                        .IsUnique();

                    b.ToTable("Departures");

                    b.HasData(
                        new { Id = 1, DepartureTime = new DateTime(2018, 7, 13, 8, 22, 56, 640, DateTimeKind.Local), FlightId = 1, FlightNumber = "QW11" },
                        new { Id = 2, DepartureTime = new DateTime(2018, 7, 13, 8, 22, 56, 640, DateTimeKind.Local), FlightId = 2, FlightNumber = "KJ76" },
                        new { Id = 3, DepartureTime = new DateTime(2018, 7, 13, 8, 22, 56, 640, DateTimeKind.Local), FlightId = 3, FlightNumber = "ER86" }
                    );
                });

            modelBuilder.Entity("AirportRESRfulApi.DAL.Models.Flight", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ArrivalTime")
                        .HasMaxLength(50);

                    b.Property<string>("DeparturePoint")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("DepartureTime");

                    b.Property<string>("DestinationPoint")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("FlightNumber")
                        .IsRequired()
                        .HasMaxLength(8);

                    b.HasKey("Id");

                    b.ToTable("Flights");

                    b.HasData(
                        new { Id = 1, ArrivalTime = new DateTime(2018, 7, 13, 13, 22, 56, 640, DateTimeKind.Local), DeparturePoint = "London", DepartureTime = new DateTime(2018, 7, 13, 8, 22, 56, 640, DateTimeKind.Local), DestinationPoint = "Ukraine", FlightNumber = "QW11" },
                        new { Id = 2, ArrivalTime = new DateTime(2018, 7, 13, 13, 22, 56, 640, DateTimeKind.Local), DeparturePoint = "Ukraine", DepartureTime = new DateTime(2018, 7, 13, 8, 22, 56, 640, DateTimeKind.Local), DestinationPoint = "London", FlightNumber = "QW12" },
                        new { Id = 3, ArrivalTime = new DateTime(2018, 7, 13, 13, 22, 56, 640, DateTimeKind.Local), DeparturePoint = "London", DepartureTime = new DateTime(2018, 7, 13, 8, 22, 56, 640, DateTimeKind.Local), DestinationPoint = "Dnipro", FlightNumber = "QW13" }
                    );
                });

            modelBuilder.Entity("AirportRESRfulApi.DAL.Models.Pilot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Birthday");

                    b.Property<int>("CrewId");

                    b.Property<int>("Experience");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("CrewId")
                        .IsUnique();

                    b.ToTable("Pilots");

                    b.HasData(
                        new { Id = 1, Birthday = new DateTime(1987, 1, 24, 0, 0, 0, 0, DateTimeKind.Unspecified), CrewId = 1, Experience = 3, FirstName = "Ivan", LastName = "Ivanov" },
                        new { Id = 2, Birthday = new DateTime(1987, 1, 24, 0, 0, 0, 0, DateTimeKind.Unspecified), CrewId = 2, Experience = 8, FirstName = "Peta", LastName = "Penhjd" },
                        new { Id = 3, Birthday = new DateTime(1987, 1, 24, 0, 0, 0, 0, DateTimeKind.Unspecified), CrewId = 3, Experience = 6, FirstName = "Max", LastName = "Maximov" }
                    );
                });

            modelBuilder.Entity("AirportRESRfulApi.DAL.Models.Plane", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DepartureId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("PlaneTypeId");

                    b.Property<DateTime>("ReleaseDate");

                    b.HasKey("Id");

                    b.HasIndex("DepartureId")
                        .IsUnique();

                    b.HasIndex("PlaneTypeId");

                    b.ToTable("Planes");

                    b.HasData(
                        new { Id = 1, DepartureId = 1, Name = "dfg4456", PlaneTypeId = 1, ReleaseDate = new DateTime(1995, 1, 22, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                        new { Id = 2, DepartureId = 2, Name = "QQWS1298", PlaneTypeId = 2, ReleaseDate = new DateTime(1995, 1, 22, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                        new { Id = 3, DepartureId = 3, Name = "INB677", PlaneTypeId = 3, ReleaseDate = new DateTime(1995, 1, 22, 0, 0, 0, 0, DateTimeKind.Unspecified) }
                    );
                });

            modelBuilder.Entity("AirportRESRfulApi.DAL.Models.PlaneType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Capacity");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("Range");

                    b.Property<int>("Seats");

                    b.Property<long>("ServiceLifeInTicks");

                    b.HasKey("Id");

                    b.ToTable("PlaneTypes");

                    b.HasData(
                        new { Id = 1, Capacity = 5000, Model = "AN140", Range = 2345, Seats = 23, ServiceLifeInTicks = 172800000000000L },
                        new { Id = 2, Capacity = 5000, Model = "IL235", Range = 2345, Seats = 23, ServiceLifeInTicks = 216000000000000L },
                        new { Id = 3, Capacity = 5000, Model = "A380", Range = 2345, Seats = 23, ServiceLifeInTicks = 259200000000000L }
                    );
                });

            modelBuilder.Entity("AirportRESRfulApi.DAL.Models.Stewardess", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Birthday");

                    b.Property<int>("CrewId");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("CrewId");

                    b.ToTable("Stewardesses");

                    b.HasData(
                        new { Id = 1, Birthday = new DateTime(1987, 1, 24, 0, 0, 0, 0, DateTimeKind.Unspecified), CrewId = 1, FirstName = "Ivana", LastName = "Ivanova" },
                        new { Id = 2, Birthday = new DateTime(1987, 1, 24, 0, 0, 0, 0, DateTimeKind.Unspecified), CrewId = 2, FirstName = "Petra", LastName = "Penhjd" },
                        new { Id = 3, Birthday = new DateTime(1987, 1, 24, 0, 0, 0, 0, DateTimeKind.Unspecified), CrewId = 3, FirstName = "Maxima", LastName = "Maximova" },
                        new { Id = 4, Birthday = new DateTime(1987, 1, 24, 0, 0, 0, 0, DateTimeKind.Unspecified), CrewId = 1, FirstName = "Ira", LastName = "Ivanova" },
                        new { Id = 5, Birthday = new DateTime(1987, 1, 24, 0, 0, 0, 0, DateTimeKind.Unspecified), CrewId = 2, FirstName = "Lena", LastName = "Penhjd" }
                    );
                });

            modelBuilder.Entity("AirportRESRfulApi.DAL.Models.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FlightId");

                    b.Property<string>("FlightNumber")
                        .IsRequired()
                        .HasMaxLength(8);

                    b.Property<bool>("IsSold");

                    b.Property<int>("PlaseNumber");

                    b.Property<decimal>("Price");

                    b.HasKey("Id");

                    b.HasIndex("FlightId");

                    b.ToTable("Tickets");

                    b.HasData(
                        new { Id = 1, FlightId = 1, FlightNumber = "QW11", IsSold = false, PlaseNumber = 1, Price = 200m },
                        new { Id = 2, FlightId = 1, FlightNumber = "QW11", IsSold = false, PlaseNumber = 2, Price = 200m },
                        new { Id = 3, FlightId = 1, FlightNumber = "QW11", IsSold = false, PlaseNumber = 3, Price = 200m },
                        new { Id = 4, FlightId = 1, FlightNumber = "QW11", IsSold = false, PlaseNumber = 4, Price = 200m },
                        new { Id = 5, FlightId = 1, FlightNumber = "QW11", IsSold = false, PlaseNumber = 5, Price = 200m },
                        new { Id = 6, FlightId = 1, FlightNumber = "QW11", IsSold = false, PlaseNumber = 6, Price = 200m },
                        new { Id = 7, FlightId = 1, FlightNumber = "QW11", IsSold = false, PlaseNumber = 7, Price = 200m },
                        new { Id = 8, FlightId = 1, FlightNumber = "QW11", IsSold = false, PlaseNumber = 8, Price = 200m },
                        new { Id = 9, FlightId = 2, FlightNumber = "KJ76", IsSold = false, PlaseNumber = 1, Price = 200m },
                        new { Id = 10, FlightId = 2, FlightNumber = "KJ76", IsSold = false, PlaseNumber = 2, Price = 200m },
                        new { Id = 11, FlightId = 2, FlightNumber = "KJ76", IsSold = false, PlaseNumber = 3, Price = 200m },
                        new { Id = 12, FlightId = 2, FlightNumber = "KJ76", IsSold = false, PlaseNumber = 4, Price = 200m },
                        new { Id = 13, FlightId = 2, FlightNumber = "KJ76", IsSold = false, PlaseNumber = 5, Price = 200m },
                        new { Id = 14, FlightId = 2, FlightNumber = "KJ76", IsSold = false, PlaseNumber = 6, Price = 200m },
                        new { Id = 15, FlightId = 3, FlightNumber = "ER86", IsSold = false, PlaseNumber = 1, Price = 200m },
                        new { Id = 16, FlightId = 3, FlightNumber = "ER86", IsSold = false, PlaseNumber = 2, Price = 200m },
                        new { Id = 17, FlightId = 3, FlightNumber = "ER86", IsSold = false, PlaseNumber = 3, Price = 200m },
                        new { Id = 18, FlightId = 3, FlightNumber = "ER86", IsSold = false, PlaseNumber = 4, Price = 200m },
                        new { Id = 19, FlightId = 3, FlightNumber = "ER86", IsSold = false, PlaseNumber = 5, Price = 200m },
                        new { Id = 20, FlightId = 3, FlightNumber = "ER86", IsSold = false, PlaseNumber = 6, Price = 200m }
                    );
                });

            modelBuilder.Entity("AirportRESRfulApi.DAL.Models.Crew", b =>
                {
                    b.HasOne("AirportRESRfulApi.DAL.Models.Departure", "Departure")
                        .WithOne("Crew")
                        .HasForeignKey("AirportRESRfulApi.DAL.Models.Crew", "DepartureId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AirportRESRfulApi.DAL.Models.Departure", b =>
                {
                    b.HasOne("AirportRESRfulApi.DAL.Models.Flight")
                        .WithOne("Departure")
                        .HasForeignKey("AirportRESRfulApi.DAL.Models.Departure", "FlightId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AirportRESRfulApi.DAL.Models.Pilot", b =>
                {
                    b.HasOne("AirportRESRfulApi.DAL.Models.Crew", "Crew")
                        .WithOne("Pilot")
                        .HasForeignKey("AirportRESRfulApi.DAL.Models.Pilot", "CrewId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AirportRESRfulApi.DAL.Models.Plane", b =>
                {
                    b.HasOne("AirportRESRfulApi.DAL.Models.Departure", "Departure")
                        .WithOne("Plane")
                        .HasForeignKey("AirportRESRfulApi.DAL.Models.Plane", "DepartureId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AirportRESRfulApi.DAL.Models.PlaneType", "PlaneType")
                        .WithMany()
                        .HasForeignKey("PlaneTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AirportRESRfulApi.DAL.Models.Stewardess", b =>
                {
                    b.HasOne("AirportRESRfulApi.DAL.Models.Crew", "Crew")
                        .WithMany("Stewardesses")
                        .HasForeignKey("CrewId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AirportRESRfulApi.DAL.Models.Ticket", b =>
                {
                    b.HasOne("AirportRESRfulApi.DAL.Models.Flight")
                        .WithMany("Tickets")
                        .HasForeignKey("FlightId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
